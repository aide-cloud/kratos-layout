syntax = "proto3";
package kratos.api;

option go_package = "github.com/go-kratos/kratos-layout/internal/conf;conf";

import "google/protobuf/duration.proto";

message Bootstrap {
  Server server = 1;
  Data data = 2;
  Registrar registrar = 3;
  Env env = 4;
  Log log = 5;
  Discovery discovery = 6;
}

message Server {
  message HTTP {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
    string mode = 4;
  }
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
    string mode = 4;
  }
  HTTP http = 1;
  GRPC grpc = 2;
}

message Env {
  string name = 1;
  map<string, string> metadata = 2;
}

message Log {
  string level = 1;
  string format = 2;
  string output = 3;
}

message Data {
  message Database {
    string driver = 1;
    string source = 2;
    string db_name = 3;
    bool debug = 4;
  }
  message Redis {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration read_timeout = 3;
    google.protobuf.Duration write_timeout = 4;
    string db_name = 5;
  }
  repeated Database databases = 1;
  repeated Redis redis = 2;
}


message Registrar {
  message Etcd {
    repeated string endpoints = 1;
  }
  Etcd etcd = 1;
}

message Discovery {
  map<string, string> providers = 1;
}